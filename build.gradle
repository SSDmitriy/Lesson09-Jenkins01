plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.13.8",
    selenideVersion = "5.20.1",
    junitVersion = "5.7.1"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.aeonbits.owner:owner:1.0.12",

            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

//таска для передачи параметров внутрь тестов
//в терминале писать команду gradlew clean run_for_terminal -Dversion=99
//tasks.withType(Test) {
//    systemProperties(System.getProperties())
//    systemProperty("browser", System.getProperty("brow", "oper"))
//
//    useJUnitPlatform()
//    testLogging {
//        lifecycle {
////            events "started", "failed"
//            events "started", "skipped", "failed", "standard_error", "standard_out"
//            exceptionFormat "short"
//        }
//    }
//}


//задача на запуск из терминала
//в терминале писать команду  gradlew clean run_for_terminal - для запуска ОДНОЙ таски
//gradlew clean test run_for_terminal - для запуска всех тестов
task run_for_terminal(type: Test) {
//    systemProperties(System.getProperties())
//    установить пропертю "browser_type" = "oper"
    systemProperty("browser_type", System.getProperty("BROWSER_key_for_Jenkins", "operaaa"))

    //установить пропертю "version_brow" = "999"
    systemProperty("browser_version", System.getProperty("VERSION_key_for_Jenkins", "999"))

    useJUnitPlatform {
        //установить тэги (запускаться будут только тесты с этим тегом
        includeTags "terminal_tag"

        //включить логирование - для вывода в консоль результатов и sout'ов, которые записаны в тесте
        testLogging {
            lifecycle {
                events "started", "skipped", "failed", "standard_error", "standard_out"
                exceptionFormat "short"
            }
        }

    }
}

//test {
//    useJUnitPlatform()
//}